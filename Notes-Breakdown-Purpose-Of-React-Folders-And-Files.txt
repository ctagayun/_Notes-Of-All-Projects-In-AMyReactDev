
1. package.json: This file shows you a list of all third-party dependencies
 (read: node packages which are located in the node_modules/ folder) and other 
 essential project configurations related to Node/npm.

2. package-lock.json: This file indicates npm how to break down (read: resolve) 
all node package versions and their internal third-party dependencies. We'll not touch this file.

3. node_modules/: This folder contains all node packages that have been installed. 
Since we used Vite to create our React application, there are various node modules (e.g. React) 
already installed for us. We'll not touch this folder.

4. gitignore: This file indicates all folders and files that shouldn't be added to
your git repository when using git, as such files and folders should be located only 
on your local machine. The node_modules/ folder is one example. It is enough to share
the package.json and package-lock.json files with other developers in the team, 
so they can install dependencies on their end with npm install without having to 
share the entire node_modules/ folder with everybody.

5. vite.config.js: A file to configure Vite. If you open it, you should see Vite's React 
plugin showing up there. If you would be running Vite with another web framework, 
the other framework's Vite plugin would show up. In the end, there are many more things 
that can optionally be set up here.

6. public/: This folder holds static assets for the project like a favicon which is used for 
the browser tab's thumbnail when starting the development server or building the project for production.

7. index.html: The HTML that is displayed in the browser when starting the project. 
If you open it, you shouldn't see much content though. However, you should see a script tag 
which links to your source folder where all the React code is located to output HTML/CSS in the browser.

8. In the beginning, everything you need is located in the src/ folder. The main focus lies on 
the src/App.jsx file which is used to implement React components. It will be used to implement
your application, but later you might want to split up your React components into multiple 
files, where each file maintains one or more components on its own. We will arrive at 
this point eventually.

    Note: Here Component is a Javascript class, that's
          why the render() method is mandatory in React class (look at main.jsx. It has "render")
          components. render() in React Component from the imported 
          React package instructs you to use it for displaying something
          
          in the browser.
          class App extends Component {
            render() {
                return (
                    <div>
                        <h1>Welcome to React</h1>
                    </div>
                )
            }
            }


9. Additionally, you will find a src/main.jsx as an entry point to the React world. 
You will get to know this file in later sections. There is also a src/index.css and a src/App.css 
file to style your overall application and components, which comes with the default style 
when you open them. You will modify them later as well.

10. React Boot Process 
      1. index.html is run by the start dev command
      2. main.jsx (entry point) is executed from index.html (see <script type="module" src="/src/main.jsx">
           in main.jsx) 
      3. srec/app.js component is invoke from main.jsx  (see import App from './App.jsx' in main.jsx)

11. Project commands:
    All your project-specific commands can be found in your package.json file under 
    the scripts property. 

    "dev": "vite",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview 

    These scripts are executed with the npm run <script> command in an IDE-integrated terminal
    or your standalone command line tool. The commands are as follows:

    # Runs the application locally for the browser
    npm run dev
 
    # Lint the application locally for code style errors
    npm run lint
    
    # Builds the application for production
    npm run build